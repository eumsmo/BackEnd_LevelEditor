using UnityEngine;

public abstract class Andavel : Controlavel {
    public System.Action<GridPos> OnPosicaoMudou;

    public override void RecebeInput(Vector2 input) => Andar(input);

    public virtual bool Andar(Vector2 direcao) {
        if (direcao.magnitude > 1) {
            direcao.Normalize();
        } else if (direcao.magnitude < 0.01f) {
            return false;
        }

        int x = Mathf.RoundToInt(direcao.x);
        int y = Mathf.RoundToInt(direcao.y);

        objeto.direcao = Mapa.VectorToDirecao(direcao);
        transform.right = Mapa.DirecaoToVectorVisual(objeto.direcao);

        objeto.posicao.Mover(x, y);
        if (!MapManager.instance.CanMoveTo(objeto.posicao.x, objeto.posicao.y)) {
            objeto.posicao.Mover(-x, -y);
            return false;
        }

        AtualizaPosicao();
        return true;
    }

    public virtual bool Teletransportar(int x, int y) {
        if (!MapManager.instance.CanMoveTo(x, y)) return false;
        objeto.posicao.x = x;
        objeto.posicao.y = y;
        AtualizaPosicao();
        return true;
    }

    public void AtualizaPosicao() {
        transform.position = MapManager.instance.GetCellPosition(objeto.posicao.x, objeto.posicao.y);

        OnPosicaoMudou?.Invoke(objeto.posicao);
    }


}