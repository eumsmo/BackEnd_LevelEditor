using UnityEngine;

public interface InfectadoEvents {
    void OnInfectado();
    void OnDesinfectado();
}

public abstract class Controlavel : MonoBehaviour {
    [Tooltip("GameObject que é ativo quando o jogador está controlando o objeto.")]
    public GameObject infectadoObject;
    [HideInInspector] public Objeto objeto;

    protected virtual void OnEnable() {
        if (objeto != null && !MapManager.instance.HasObjeto(objeto)) {
            MapManager.instance.CadastrarObjeto(objeto, gameObject);
        }
    }

    protected virtual void OnDisable() {
        if (objeto != null && MapManager.instance.HasObjeto(objeto)) {
            MapManager.instance.RemoverObjeto(objeto);
        }
    }

    public virtual void HandleDefaultInfectado() {
        if (infectadoObject != null) infectadoObject.SetActive(true);

        InfectadoEvents infectado = GetComponent<InfectadoEvents>();
        if (infectado != null) infectado.OnInfectado();
    }

    public virtual void HandleDefaultDesinfectado() {
        if (infectadoObject != null) infectadoObject.SetActive(false);

        InfectadoEvents desinfectado = GetComponent<InfectadoEvents>();
        if (desinfectado != null) desinfectado.OnDesinfectado();
    }

    public virtual void RecebeInput(Vector2 input){ }
    public virtual bool FazerAcao() { return false; }
}

